"""Migration

Revision ID: 3d823cfcab7f
Revises: 
Create Date: 2025-05-22 15:57:25.428896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3d823cfcab7f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('locations',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('part_types',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('expected_failure_interval_days', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_types',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('expected_lifetime_months', sa.Integer(), nullable=True),
    sa.Column('part_type_id', sa.BigInteger(), nullable=False),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['part_type_id'], ['part_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.Column('performed_by', sa.BigInteger(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replacement_suggestions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('part_type_id', sa.BigInteger(), nullable=False),
    sa.Column('suggestion_date', sa.Date(), nullable=False),
    sa.Column('forecast_replacement_date', sa.Date(), nullable=False),
    sa.Column('generated_by', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['part_type_id'], ['part_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('type_id', sa.BigInteger(), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('warranty_end', sa.Date(), nullable=True),
    sa.Column('current_location_id', sa.BigInteger(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['device_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('failure_records',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('part_type_id', sa.BigInteger(), nullable=False),
    sa.Column('failure_date', sa.Date(), nullable=False),
    sa.Column('resolved_date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['part_type_id'], ['part_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_items',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('inventory_event_id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('found', sa.Boolean(), nullable=False),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['inventory_event_id'], ['inventory_events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('task_type', sa.String(length=100), nullable=False),
    sa.Column('scheduled_date', sa.Date(), nullable=False),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('assigned_to', sa.BigInteger(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movements',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('from_location_id', sa.BigInteger(), nullable=True),
    sa.Column('to_location_id', sa.BigInteger(), nullable=False),
    sa.Column('moved_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('performed_by', sa.BigInteger(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['from_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['to_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('write_off_reports',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('disposed_by', sa.BigInteger(), nullable=True),
    sa.Column('approved_by', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['disposed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('write_off_reports')
    op.drop_table('movements')
    op.drop_table('maintenance_tasks')
    op.drop_table('inventory_items')
    op.drop_table('failure_records')
    op.drop_table('devices')
    op.drop_table('replacement_suggestions')
    op.drop_table('inventory_events')
    op.drop_table('device_types')
    op.drop_table('part_types')
    op.drop_table('locations')
    op.drop_table('users')
    # ### end Alembic commands ###
